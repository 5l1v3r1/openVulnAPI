/**
 * Cisco PSIRT openVuln API
 * The Cisco Product Security Incident Response Team (PSIRT) openVuln API is a RESTful API that allows customers to obtain Cisco Security Vulnerability information in different machine-consumable formats. APIs are important for customers because they allow their technical staff and programmers to build tools that help them do their job more effectively (in this case, to keep up with security vulnerability information). For more information about the Cisco PSIRT openVuln API visit https://developer.cisco.com/psirt  For detail steps on how to use the API go to: https://developer.cisco.com/psirt  This is a beta release of a swagger YAML for the Cisco PSIRT openVuln API  To access the API sign in with your Cisco CCO account at http://apiconsole.cisco.com and register an application to recieve a client_id and a client_secret  You can then get your token using curl or any other method you prefer.  'curl -s -k -H \"Content-Type: application/x-www-form-urlencoded\" -X POST -d \"client_id=<your_client_id>\" -d \"client_secret=<your_client_secret>\" -d \"grant_type=client_credentials\" https://cloudsso.cisco.com/as/token.oauth2'  You will receive an access token as demonstrated in the following example:  '{\"access_token\":\"I7omWtBDAieSiUX3shOxNJfuy4J6\",\"token_type\":\"Bearer\",\"expires_in\":3599}'  In Swagger, click on Change Authentication  enter the text \"I7omWtBDAieSiUX3shOxNJfuy4J6\" (which is the token you received)  then click on \"Try this operation\" 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: os@cisco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CiscoPsirtOpenVulnApi) {
      root.CiscoPsirtOpenVulnApi = {};
    }
    root.CiscoPsirtOpenVulnApi.DefaultApi = factory(root.CiscoPsirtOpenVulnApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 0.0.4
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the securityAdvisoriesAdvisoryAdvisoryIdGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesAdvisoryAdvisoryIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain an advisory given its advisory ID &#x60;advisory_id&#x60; (i.e., cisco-sa-20180221-ucdm) 
     * @param {String} advisoryId advisory ID
     * @param {module:api/DefaultApi~securityAdvisoriesAdvisoryAdvisoryIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesAdvisoryAdvisoryIdGet = function(advisoryId, callback) {
      var postBody = null;

      // verify the required parameter 'advisoryId' is set
      if (advisoryId === undefined || advisoryId === null) {
        throw new Error("Missing the required parameter 'advisoryId' when calling securityAdvisoriesAdvisoryAdvisoryIdGet");
      }


      var pathParams = {
        'advisory_id': advisoryId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/advisory/{advisory_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesAllGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesAllGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain information about all published security advisories. By default the output is in JSON. To obtain the output in XML use the .xml extension. For example, /advisories/all.xml 
     * @param {module:api/DefaultApi~securityAdvisoriesAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesAllGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/all', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesCveCveIdGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesCveCveIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain an advisory using a given Common Vulnerability Enumerator (CVE). The &#x60;cve_id&#x60; format is CVE-YYYY-NNNN. For more information about CVE visit http://cve.mitre.org/ 
     * @param {String} cveId CVE Identifier (i.e., CVE-YYYY-NNNN)
     * @param {module:api/DefaultApi~securityAdvisoriesCveCveIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesCveCveIdGet = function(cveId, callback) {
      var postBody = null;

      // verify the required parameter 'cveId' is set
      if (cveId === undefined || cveId === null) {
        throw new Error("Missing the required parameter 'cveId' when calling securityAdvisoriesCveCveIdGet");
      }


      var pathParams = {
        'cve_id': cveId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/cve/{cve_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesIosGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesIosGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all advisories that affects the given ios version 
     * @param {String} version IOS version to obtain security advisories
     * @param {module:api/DefaultApi~securityAdvisoriesIosGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesIosGet = function(version, callback) {
      var postBody = null;

      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling securityAdvisoriesIosGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'version': version,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/ios', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesIosxeGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesIosxeGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all advisories that affects the given ios version 
     * @param {String} version IOS version to obtain security advisories
     * @param {module:api/DefaultApi~securityAdvisoriesIosxeGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesIosxeGet = function(version, callback) {
      var postBody = null;

      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling securityAdvisoriesIosxeGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'version': version,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/iosxe', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesLatestNumberGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesLatestNumberGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all the latest security advisories given an absolute number. For instance, the latest 10 or latest 5. 
     * @param {Number} _number An absolute number to obtain the latest security advisories.
     * @param {module:api/DefaultApi~securityAdvisoriesLatestNumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesLatestNumberGet = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling securityAdvisoriesLatestNumberGet");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/latest/{number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesProductGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesProductGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all the advisories that affects the given product name. 
     * @param {String} product An product name to obtain security advisories that matches given product name.
     * @param {module:api/DefaultApi~securityAdvisoriesProductGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesProductGet = function(product, callback) {
      var postBody = null;

      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling securityAdvisoriesProductGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'product': product,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/product', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesSeveritySeverityFirstpublishedGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesSeveritySeverityFirstpublishedGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) and additionally filter based of firstpublished start date and enddate. 
     * @param {module:model/String} severity Used to obtain all advisories that have a security impact rating of critical
     * @param {Date} startDate 
     * @param {Date} endDate 
     * @param {module:api/DefaultApi~securityAdvisoriesSeveritySeverityFirstpublishedGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesSeveritySeverityFirstpublishedGet = function(severity, startDate, endDate, callback) {
      var postBody = null;

      // verify the required parameter 'severity' is set
      if (severity === undefined || severity === null) {
        throw new Error("Missing the required parameter 'severity' when calling securityAdvisoriesSeveritySeverityFirstpublishedGet");
      }

      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling securityAdvisoriesSeveritySeverityFirstpublishedGet");
      }

      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling securityAdvisoriesSeveritySeverityFirstpublishedGet");
      }


      var pathParams = {
        'severity': severity
      };
      var queryParams = {
        'startDate': startDate,
        'endDate': endDate,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/severity/{severity}/firstpublished', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesSeveritySeverityGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesSeveritySeverityGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low). 
     * @param {module:model/String} severity Critical, High, Medium, Low
     * @param {module:api/DefaultApi~securityAdvisoriesSeveritySeverityGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesSeveritySeverityGet = function(severity, callback) {
      var postBody = null;

      // verify the required parameter 'severity' is set
      if (severity === undefined || severity === null) {
        throw new Error("Missing the required parameter 'severity' when calling securityAdvisoriesSeveritySeverityGet");
      }


      var pathParams = {
        'severity': severity
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/severity/{severity}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesSeveritySeverityLastpublishedGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesSeveritySeverityLastpublishedGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low). 
     * @param {module:model/String} severity Used to obtain all advisories that have a security impact rating of critical
     * @param {Date} startDate 
     * @param {Date} endDate 
     * @param {module:api/DefaultApi~securityAdvisoriesSeveritySeverityLastpublishedGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesSeveritySeverityLastpublishedGet = function(severity, startDate, endDate, callback) {
      var postBody = null;

      // verify the required parameter 'severity' is set
      if (severity === undefined || severity === null) {
        throw new Error("Missing the required parameter 'severity' when calling securityAdvisoriesSeveritySeverityLastpublishedGet");
      }

      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling securityAdvisoriesSeveritySeverityLastpublishedGet");
      }

      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling securityAdvisoriesSeveritySeverityLastpublishedGet");
      }


      var pathParams = {
        'severity': severity
      };
      var queryParams = {
        'startDate': startDate,
        'endDate': endDate,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/severity/{severity}/lastpublished', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the securityAdvisoriesYearYearGet operation.
     * @callback module:api/DefaultApi~securityAdvisoriesYearYearGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to obtain all security advisories that have were orginally published in a specific year &#x60;YYYY&#x60;. 
     * @param {String} year The four digit year.
     * @param {module:api/DefaultApi~securityAdvisoriesYearYearGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.securityAdvisoriesYearYearGet = function(year, callback) {
      var postBody = null;

      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling securityAdvisoriesYearYearGet");
      }


      var pathParams = {
        'year': year
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['psirt_openvuln_api_auth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/security/advisories/year/{year}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
