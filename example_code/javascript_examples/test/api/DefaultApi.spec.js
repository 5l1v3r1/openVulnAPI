/**
 * Cisco PSIRT openVuln API
 * The Cisco Product Security Incident Response Team (PSIRT) openVuln API is a RESTful API that allows customers to obtain Cisco Security Vulnerability information in different machine-consumable formats. APIs are important for customers because they allow their technical staff and programmers to build tools that help them do their job more effectively (in this case, to keep up with security vulnerability information). For more information about the Cisco PSIRT openVuln API visit https://developer.cisco.com/psirt  For detail steps on how to use the API go to: https://developer.cisco.com/psirt  This is a beta release of a swagger YAML for the Cisco PSIRT openVuln API  To access the API sign in with your Cisco CCO account at http://apiconsole.cisco.com and register an application to recieve a client_id and a client_secret  You can then get your token using curl or any other method you prefer.  'curl -s -k -H \"Content-Type: application/x-www-form-urlencoded\" -X POST -d \"client_id=<your_client_id>\" -d \"client_secret=<your_client_secret>\" -d \"grant_type=client_credentials\" https://cloudsso.cisco.com/as/token.oauth2'  You will receive an access token as demonstrated in the following example:  '{\"access_token\":\"I7omWtBDAieSiUX3shOxNJfuy4J6\",\"token_type\":\"Bearer\",\"expires_in\":3599}'  In Swagger, click on Change Authentication  enter the text \"I7omWtBDAieSiUX3shOxNJfuy4J6\" (which is the token you received)  then click on \"Try this operation\" 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: os@cisco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CiscoPsirtOpenVulnApi);
  }
}(this, function(expect, CiscoPsirtOpenVulnApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CiscoPsirtOpenVulnApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('securityAdvisoriesAdvisoryAdvisoryIdGet', function() {
      it('should call securityAdvisoriesAdvisoryAdvisoryIdGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesAdvisoryAdvisoryIdGet
        //instance.securityAdvisoriesAdvisoryAdvisoryIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesAllGet', function() {
      it('should call securityAdvisoriesAllGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesAllGet
        //instance.securityAdvisoriesAllGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesCveCveIdGet', function() {
      it('should call securityAdvisoriesCveCveIdGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesCveCveIdGet
        //instance.securityAdvisoriesCveCveIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesIosGet', function() {
      it('should call securityAdvisoriesIosGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesIosGet
        //instance.securityAdvisoriesIosGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesIosxeGet', function() {
      it('should call securityAdvisoriesIosxeGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesIosxeGet
        //instance.securityAdvisoriesIosxeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesLatestNumberGet', function() {
      it('should call securityAdvisoriesLatestNumberGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesLatestNumberGet
        //instance.securityAdvisoriesLatestNumberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesProductGet', function() {
      it('should call securityAdvisoriesProductGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesProductGet
        //instance.securityAdvisoriesProductGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesSeveritySeverityFirstpublishedGet', function() {
      it('should call securityAdvisoriesSeveritySeverityFirstpublishedGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesSeveritySeverityFirstpublishedGet
        //instance.securityAdvisoriesSeveritySeverityFirstpublishedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesSeveritySeverityGet', function() {
      it('should call securityAdvisoriesSeveritySeverityGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesSeveritySeverityGet
        //instance.securityAdvisoriesSeveritySeverityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesSeveritySeverityLastpublishedGet', function() {
      it('should call securityAdvisoriesSeveritySeverityLastpublishedGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesSeveritySeverityLastpublishedGet
        //instance.securityAdvisoriesSeveritySeverityLastpublishedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityAdvisoriesYearYearGet', function() {
      it('should call securityAdvisoriesYearYearGet successfully', function(done) {
        //uncomment below and update the code to test securityAdvisoriesYearYearGet
        //instance.securityAdvisoriesYearYearGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
