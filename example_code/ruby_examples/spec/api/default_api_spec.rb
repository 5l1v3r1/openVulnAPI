=begin
###############################################################################
# This is an example in Ruby of how you can create different functions
# to query each of the Resource URIs of the openVuln API.
# ** This is just a starting point, you will need to add your own authentication
# information and Authorization tokens
#
# For a complete "turn-key" tool, check out the openVulnQuery python tool
# https://github.com/CiscoPSIRT/openVulnAPI/tree/master/openVulnQuery
###############################################################################

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for security_advisories_advisory_advisory_id_get
  #
  # Used to obtain an advisory given its advisory ID &#x60;advisory_id&#x60; (i.e., cisco-sa-20180221-ucdm)
  # @param advisory_id advisory ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_advisory_advisory_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_all_get
  #
  # Used to obtain information about all published security advisories. By default the output is in JSON. To obtain the output in XML use the .xml extension. For example, /advisories/all.xml
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_all_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_cve_cve_id_get
  #
  # Used to obtain an advisory using a given Common Vulnerability Enumerator (CVE). The &#x60;cve_id&#x60; format is CVE-YYYY-NNNN. For more information about CVE visit http://cve.mitre.org/
  # @param cve_id CVE Identifier (i.e., CVE-YYYY-NNNN)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_cve_cve_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_ios_get
  #
  # Used to obtain all advisories that affects the given ios version
  # @param version IOS version to obtain security advisories
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_ios_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_iosxe_get
  #
  # Used to obtain all advisories that affects the given ios version
  # @param version IOS version to obtain security advisories
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_iosxe_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_latest_number_get
  #
  # Used to obtain all the latest security advisories given an absolute number. For instance, the latest 10 or latest 5.
  # @param number An absolute number to obtain the latest security advisories.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_latest_number_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_product_get
  #
  # Used to obtain all the advisories that affects the given product name.
  # @param product An product name to obtain security advisories that matches given product name.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_product_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_severity_severity_firstpublished_get
  #
  # Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) and additionally filter based of firstpublished start date and enddate.
  # @param severity Used to obtain all advisories that have a security impact rating of critical
  # @param start_date
  # @param end_date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_severity_severity_firstpublished_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_severity_severity_get
  #
  # Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low).
  # @param severity Critical, High, Medium, Low
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_severity_severity_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_severity_severity_lastpublished_get
  #
  # Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low).
  # @param severity Used to obtain all advisories that have a security impact rating of critical
  # @param start_date
  # @param end_date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_severity_severity_lastpublished_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_year_year_get
  #
  # Used to obtain all security advisories that have were orginally published in a specific year &#x60;YYYY&#x60;.
  # @param year The four digit year.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'security_advisories_year_year_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
